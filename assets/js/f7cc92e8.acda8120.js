"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[306],{6680:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Extending","title":"Extending the System","description":"So you want to create a different type of ragdoll than R15 or R6? No problem create a Blueprint and add it to the RagdollFactory.","source":"@site/docs/Extending.md","sourceDirName":".","slug":"/Extending","permalink":"/ragdoll-system/docs/Extending","draft":false,"unlisted":false,"editUrl":"https://github.com/LeoStormer/ragdoll-system/edit/master/docs/Extending.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Installation","permalink":"/ragdoll-system/docs/installation"}}');var o=t(4848),l=t(8453);const i={},a="Extending the System",s={},d=[];function c(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"extending-the-system",children:"Extending the System"})}),"\n",(0,o.jsxs)(n.p,{children:["So you want to create a different type of ragdoll than R15 or R6? No problem create a ",(0,o.jsx)(n.a,{href:"/api/Blueprint",children:"Blueprint"})," and add it to the RagdollFactory."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",metastring:'title="MyBlueprint.lua"',children:'    local Blueprint = require(path.to.RagdollSystem).Blueprint\r\n\r\n    local MyBlueprint = setmetatable({}, Blueprint)\r\n    MyBlueprint.socketSettings = { --The keys are names of Motor6Ds in your model e.g. Wrist, Waist, or Neck.\r\n\t\tNeck = { MaxFrictionTorque = 150, UpperAngle = 45, TwistLowerAngle = -30, TwistUpperAngle = 30 },\r\n\t\tRoot = { MaxFrictionTorque = 50, UpperAngle = 20, TwistLowerAngle = 0, TwistUpperAngle = 30 },\r\n\t\tMyJoint = { MaxFrictionTorque = 150, UpperAngle = 45, TwistLowerAngle = -30, TwistUpperAngle = 30 },\r\n\t\tMyJoint2 = { MaxFrictionTorque = 150, UpperAngle = 45, TwistLowerAngle = -30, TwistUpperAngle = 30 },\r\n    }\r\n    MyBlueprint.cframeOverrides = {} --The keys are names of Motor6Ds in your model.\r\n\r\n    function MyBlueprint.satisfiesRequirements(model: Model): boolean\r\n        --How can we tell that model satisfies my blueprint?\r\n        return model:FindFirstChild("MyLimb") ~= nil\r\n    end\r\n\r\n    function MyBlueprint.finalTouches(ragdoll: Ragdoll & RagdollInternals)\r\n        --Do something with ragdoll, or don\'t, ragdoll won\'t mind.\r\n        local noCollision = Instance.new("NoCollisionConstraint")\r\n        noCollision.Enabled = false\r\n        noCollision.Part0 = ragdoll.Character.MyLimb\r\n        noCollision.Part1 = ragdoll.Character.MyLimb2\r\n        noCollision.Parent = ragdoll._noCollisionConstraintFolder\r\n        table.insert(ragdoll._noCollisionConstraints, noCollision)\r\n    end\r\n\r\n    return MyBlueprint\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",metastring:'title="Main"',children:"local MyBlueprint = require(path.to.MyBlueprint)\r\nlocal RagdollFactory = require(path.to.RagdollSystem).RagdollFactory\r\nRagdollFactory.addBlueprint(MyBlueprint)\n"})})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(6540);const o={},l=r.createContext(o);function i(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);
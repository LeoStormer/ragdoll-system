"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[957],{2134:e=>{e.exports=JSON.parse('{"functions":[{"name":"setSystemSettings","desc":"Sets the settings of the system, all fields are optional. If a field is not\\nprovided, it remains unchanged.\\n\\n```lua\\n\\tRagdollSystem:setSystemSettings({\\n\\t\\tFreezeIfDead = false,\\n\\t}) -- This is ok.\\n```","params":[{"name":"settingsDictionary","desc":"","lua_type":"SystemSettings"}],"returns":[],"function_type":"method","source":{"line":97,"path":"lib/init.lua"}},{"name":"getSystemSettings","desc":"","params":[],"returns":[{"desc":"","lua_type":"SystemSettings"}],"function_type":"method","source":{"line":136,"path":"lib/init.lua"}},{"name":"getRagdoll","desc":"Returns the ragdoll corresponding to the model or nil if there isn\'t one.","params":[{"name":"ragdollModel","desc":"","lua_type":"Model"}],"returns":[{"desc":"","lua_type":"Ragdoll?\\r\\n"}],"function_type":"method","source":{"line":144,"path":"lib/init.lua"}},{"name":"activateRagdoll","desc":"Activates ragdoll physics on the ragdoll.","params":[{"name":"ragdollModel","desc":"","lua_type":"Model"}],"returns":[],"function_type":"method","source":{"line":152,"path":"lib/init.lua"}},{"name":"deactivateRagdoll","desc":"Deactivates ragdoll physics on the ragdoll.","params":[{"name":"ragdollModel","desc":"","lua_type":"Model"}],"returns":[],"function_type":"method","source":{"line":160,"path":"lib/init.lua"}},{"name":"collapseRagdoll","desc":"Activates ragdoll physics on the ragdoll, deactivates ragdoll physics after the ragdoll has remained still for 1+ seconds.","params":[{"name":"ragdollModel","desc":"","lua_type":"Model"}],"returns":[],"function_type":"method","source":{"line":168,"path":"lib/init.lua"}},{"name":"addRagdoll","desc":"Creates and caches a ragdoll corresponding to the Model.","params":[{"name":"ragdollModel","desc":"","lua_type":"Model"},{"name":"blueprint","desc":"","lua_type":"Blueprint?"}],"returns":[{"desc":"","lua_type":"Ragdoll\\r\\n"}],"function_type":"method","source":{"line":177,"path":"lib/init.lua"}},{"name":"replicateRagdoll","desc":"Creates and caches a Ragdoll from a model that already has its Constraints constructed.","params":[{"name":"ragdollModel","desc":"","lua_type":"Model"},{"name":"blueprint","desc":"","lua_type":"Blueprint?"}],"returns":[{"desc":"","lua_type":"Ragdoll\\r\\n"}],"function_type":"method","realm":["Client"],"source":{"line":189,"path":"lib/init.lua"}},{"name":"removeRagdoll","desc":"Destroys the ragdoll corresponding to the model and removes it from the cache.","params":[{"name":"ragdollModel","desc":"","lua_type":"Model"}],"returns":[],"function_type":"method","source":{"line":199,"path":"lib/init.lua"}},{"name":"getPlayerRagdoll","desc":"Returns the ragdoll corresponding to player\'s character or nil if there isnt one.","params":[{"name":"player","desc":"","lua_type":"Player"}],"returns":[{"desc":"","lua_type":"Ragdoll?\\r\\n"}],"function_type":"method","source":{"line":213,"path":"lib/init.lua"}},{"name":"getLocalRagdoll","desc":"Returns the ragdoll coresponding to the local player\'s character.","params":[],"returns":[{"desc":"","lua_type":"Ragdoll?\\r\\n"}],"function_type":"method","realm":["Client"],"source":{"line":221,"path":"lib/init.lua"}},{"name":"setLocalRagdoll","desc":"Sets the local player\'s ragdoll.","params":[{"name":"ragdoll","desc":"","lua_type":"Ragdoll"}],"returns":[],"function_type":"method","realm":["Client"],"private":true,"source":{"line":230,"path":"lib/init.lua"}},{"name":"activateLocalRagdoll","desc":"Activates ragdoll physics on the local player\'s ragdoll.","params":[],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":238,"path":"lib/init.lua"}},{"name":"deactivateLocalRagdoll","desc":"Deactivates ragdoll physics on the local player\'s ragdoll.","params":[],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":246,"path":"lib/init.lua"}},{"name":"collapseLocalRagdoll","desc":"Activates ragdoll physics on the local player\'s ragdoll, deactivates ragdoll physics after the ragdoll has remained still.","params":[],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":254,"path":"lib/init.lua"}}],"properties":[{"name":"Remotes","desc":"","lua_type":"{ ActivateRagdoll: RemoteEvent, DeactivateRagdoll: RemoteEvent, CollapseeRagdoll: RemoteEvent, }","private":true,"source":{"line":17,"path":"lib/init.lua"}},{"name":"Signals","desc":"","lua_type":"{ ActivateLocalRagdoll: Signal, DeactivateLocalRagdoll: Signal, CollapseLocalRagdoll: Signal, ActivateRagdoll: Signal, DeactivateRagdoll: Signal, CollapsRagdoll: Signal}","external_types":[{"name":"Signal","url":"https://sleitnick.github.io/RbxUtil/api/Signal/"}],"private":true,"source":{"line":23,"path":"lib/init.lua"}},{"name":"Blueprint","desc":"A reference to the base Blueprint class","lua_type":"Blueprint","source":{"line":28,"path":"lib/init.lua"}},{"name":"RagdollFactory","desc":"A reference to the Ragdoll Factory","lua_type":"RagdollFactory","source":{"line":33,"path":"lib/init.lua"}},{"name":"RagdollConstructed","desc":"Fires when a ragdoll is constructed by the Ragdoll Factory.\\n\\n```lua\\nRagdollSystem.RagdollConstructed:Connect(function(ragdoll: Ragdoll)\\n\\tdoSomething(ragdoll)\\nend)\\n```","lua_type":"Signal","readonly":true,"source":{"line":45,"path":"lib/init.lua"}}],"types":[{"name":"SystemSettings","desc":"LowDetailModeThreshold is the number of active ragdolls before the system \\nstarts using low detail mode. CollapseTimeoutInterval is the interval in \\nseconds between ragdoll distance checks while collapsed.\\nCollapseTimeoutDistanceThreshold is the minimum distance in studs a ragdoll\\nmust have moved between distance checks to remain collapsed. FreezeIfDead \\ndetermines whether the system freezes ragdolls when they are being\\ntimed out of collapse if they are dead. If false they remain collapsed.","lua_type":"{ LowDetailModeThreshold: number, CollapseTimoutInterval: number, CollapseTimeoutDistanceThreshold: number, FreezeIfDead: boolean, }","source":{"line":77,"path":"lib/init.lua"}}],"name":"RagdollSystem","desc":"","source":{"line":12,"path":"lib/init.lua"}}')}}]);